Git Commands :

1. git config user.name -- will return user name of git available in git config file.

2. git config user.email -- will return email of the user available in git config file.

3. git config --global user.name abc -- will add name in git config file.

4. git config --global user.email abc@abc.com -- will add email in git config file.

5. git init -- will initialize git repository of the respective folder. One can see .git hidden folder
	       after successful creation of git repository.

6. git init abc -- It will create abc directory and initialize git respository init.

7. git status -- will show difference between files in the folder and staging area.

8. git add -- will copy the file from folder to staging area. (index file will be created in .git hidden
                                                                 folder represents staging area)

9. git add . -- wiill copy all the files from folder to staging area.

10. git commit -m "message" -- It will commit in the repository (objects folder will be created in .git
                                                                hidden folder where all our commits will
								be stored)

11. git reset Head -- filename -- Will reset the file were unstaged (Will be reset to the previous state
                                                                     before commit)

12. git log -- will list all the commots made in our repository in reverse chronological order. It also
               shows all the branches and which commots they point to.

13. git cat-file -p latestGitHashcode -- will return reference of parents and tree and other info.
	(ex: git cat-file -p 45e02444c6f62e1c605dabed28dccf343229f0f0 -- get has from git log)

14. git branch - Will list all branches in repsitory and also which branch we are on by coloring in green
                 and astrik to differentiate for the branch we are working on.

15. git branch lmn -- Will create new lmn branch in the git repository.

16. git checkout lmn -- Will switch to the respective branch (ex : lmn). It will change head of pointing
                        to new branch, populate index with snapshot of commit we switch, copy contents
                        of directory changes)

17. git branch -d apple -- will delete the branch apple

18. git merge doll -- will merge doll into master (first we need to checkout to master and then merge doll)
 
19. git checkout -b apple -- will create branch apple and switching to apple branch

20. 

Notes :
-------
1. .git hidden folder which represents our git repository has two blocks staging area and commit history.
In the staging area kind of draft space one can add of work to stage area and then commit. Commit is 
version of project with unique hash.  
2. Branch is a point to a commit (don't compare with tree branch). master is default branch name given
in the git repositoty.
3. Commits are snapshots not just changes. When ever we make commit master will point to latest commit.
Latest commit will points to previous commit.
4. Head is pointer of references on which branch we are on.
5. Merge will incoporate changes of one branch to other. fast-forward merge will copy from one branch
to other.
6. Sometimes when we do git log we will reach end then to return cmd press q.
7. 

email and password

chakonprabu@gmail.com
konbu@987 
